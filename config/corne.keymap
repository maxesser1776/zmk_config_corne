/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#define ZMK_POINTING_DEFAULT_MOVE_VAL 850  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        hm: homerow-mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homehow-mods";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-preferred";
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };

        behaviors {
            tog_on: toggle_layer_on_only {
                compatible = "zmk,behavior-toggle-layer";
                #binding-cells = <1>;
                display-name = "Toggle Layer On";
                toggle-mode = "on";
            };

            tog_off: toggle_layer_off_only {
                compatible = "zmk,behavior-toggle-layer";
                #binding-cells = <1>;
                display-name = "Toggle Layer Off";
                toggle-mode = "off";
            };
        };
    };

    combos {
        compatible = "zmk,combos";

        layer_lock {
            bindings = <&tog_on 1>;
            key-positions = <38 39>;
        };

        layer_lock_off {
            bindings = <&tog_off 1>;
            key-positions = <38 37>;
        };

        switch_dektop_left {
            bindings = <&kp LG(LC(LEFT_ARROW))>;
            key-positions = <17 13>;
        };
    };

    macros {
        win_lock: win_sleep {
            wait-ms = <50>;
            tap-ms = <5>;
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(L)>;
            label = "WIN_SLEEP";
        };

        task_manager: task_manager {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(ESCAPE))>;
            label = "TASK_MANAGER";
        };

        File_Exp: File_Exp {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(E)>;
            label = "FILE_EXP";
        };

        copy: copy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(C)>;
            label = "COPY";
        };

        paste: paste {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(V)>;
            label = "PASTE";
        };

        double_periodbackslash: double_periodbackslash {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp DOT &kp DOT &kp FSLH>;
            label = "DOUBLE_PERIODBACKSLASH";
        };

        double_colon: double_colon {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp COLON &kp COLON>;
            label = "DOUBLE_COLON";
        };

        quake_mode: quake_mode {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LG(GRAVE)>;
            label = "QUAKE_MODE";
        };

        fusion_isolate: fusion_isolate {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LS(V))>;
            label = "FUSION_ISOLATE";
        };

        fusion_componet_colors: fusion_componet_colors {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(N)>;
            label = "FUSION_COMPONET_COLORS";
        };

        fusion_unisolate: fusion_unisolate {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(V)>;
            label = "FUSION_UNISOLATE";
        };

        chrome_back: chrome_back {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(LEFT)>;
            label = "CHROME_BACK";
        };

        chrome_forward: chrome_forward {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LA(RIGHT)>;
            label = "CHROME_FORWARD";
        };

        protonmail: protonmail {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(LA(O))>;
            label = "PROTONMAIL";
            wait-ms = <15>;
        };

        chrome_tab_forward: chrome_tab_forward {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LC(TAB)>;
            label = "CHROME_TAB_FORWARD";
        };

        chrome_tab_back: chrome_tab_back {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(TAB))>;
            label = "CHROME_TAB_BACK";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q           &kp W           &kp E         &kp R             &kp T                        &kp Y            &kp U              &kp I                  &kp O            &kp P               &none
&none  &hm LEFT_GUI A  &hm LEFT_ALT S  &hm LCTRL D   &hm LEFT_SHIFT F  &mt LG(LC(RIGHT_ARROW)) G    &hm RIGHT_GUI H  &mt RIGHT_SHIFT J  &hm RCTRL K            &hm RIGHT_ALT L  &kp BACKSPACE       &none
&none  &kp Z           &kp X           &kp C         &kp V             &kp B                        &kp N            &kp M              &mt DOUBLE_QUOTES SQT  &mt COMMA DOT    &mt QUESTION SLASH  &none
                                       &lt 2 ESCAPE  &lt 3 SPACE       &lt 1 TAB                    &lt 2 ENTER      &lt 4 SPACE        &lt 5 BACKSPACE
            >;

            label = "Base";
        };

        Num {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp ASTRK  &kp N7  &kp N8     &kp N9   &kp PLUS     &trans  &trans  &trans  &trans  &trans  &none
&none  &kp FSLH   &kp N4  &kp N5     &kp N6   &kp MINUS    &trans  &trans  &trans  &trans  &trans  &none
&none  &kp N0     &kp N1  &kp N2     &kp N3   &kp DOT      &trans  &trans  &trans  &trans  &trans  &none
                          &kp EQUAL  &kp DEL  &none        &trans  &trans  &trans
            >;

            label = "Num";
        };

        Sym {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp SQT          &kp LESS_THAN  &kp GREATER_THAN  &kp DOUBLE_QUOTES  &kp PERIOD                 &kp AMPERSAND  &double_colon  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp PERCENT   &none
&none  &kp EXCLAMATION  &kp MINUS      &kp PLUS          &kp EQUAL          &kp HASH                   &kp PIPE       &kp COLON      &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp QUESTION  &none
&none  &kp CARET        &kp SLASH      &kp ASTERISK      &kp BACKSLASH      &double_periodbackslash    &kp TILDE      &kp DOLLAR     &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp AT_SIGN   &none
                                       &trans            &kp DELETE         &hm UNDERSCORE MINUS       &kp RET        &kp SEMICOLON  &kp PERIOD
            >;

            label = "Sym";
        };

        Nav {
            bindings = <
&trans  &fusion_componet_colors  &mkp MB3        &mmv MOVE_UP    &msc SCRL_UP     &File_Exp      &kp C_AL_CALCULATOR  &paste            &copy             &kp K_CUT        &kp K_UNDO           &trans
&trans  &fusion_isolate          &mmv MOVE_LEFT  &mkp MB1        &mmv MOVE_RIGHT  &mkp RCLK      &kp CAPS             &kp LEFT          &kp UP            &kp DOWN         &kp RIGHT            &trans
&trans  &fusion_unisolate        &protonmail     &mmv MOVE_DOWN  &msc SCRL_DOWN   &quake_mode    &task_manager        &chrome_tab_back  &chrome_back      &chrome_forward  &chrome_tab_forward  &trans
                                                 &trans          &trans           &trans         &trans               &trans            &kp LC(LEFT_GUI)
            >;

            label = "Nav";
        };

        Media {
            bindings = <
&none  &trans        &trans             &trans           &trans              &trans        &trans  &trans  &trans  &trans  &trans  &none
&none  &kp C_REWIND  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_FAST_FORWARD  &trans        &trans  &trans  &trans  &trans  &trans  &none
&none  &trans        &trans             &trans           &trans              &trans        &trans  &trans  &trans  &trans  &trans  &none
                                        &kp C_MUTE       &kp C_PP            &kp C_STOP    &trans  &trans  &trans
            >;

            label = "Media";
        };

        Fun {
            bindings = <
&trans  &kp F12           &kp F7           &kp F8               &kp F9        &kp PRINTSCREEN    &trans       &trans        &trans        &trans        &trans        &trans
&trans  &hm LEFT_GUI F11  &hm LEFT_ALT F4  &hm LEFT_CONTROL F5  &hm LSHFT F6  &kp SCROLLLOCK     &trans       &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &kp F10           &kp F1           &kp F2               &kp F3        &kp PAUSE_BREAK    &trans       &trans        &trans        &trans        &trans        &bt BT_CLR
                                           &bootloader          &trans        &win_lock          &bootloader  &trans        &trans
            >;

            label = "Fun";
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
