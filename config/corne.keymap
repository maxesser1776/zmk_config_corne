/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        hm: homerow-mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homehow-mods";
            #binding-cells = <2>;
            tapping-term-ms = <300>;
            flavor = "tap-preferred";
            quick-tap-ms = <125>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };

        behaviors {
            tog_on: toggle_layer_on_only {
                compatible = "zmk,behavior-toggle-layer";
                #binding-cells = <1>;
                display-name = "Toggle Layer On";
                toggle-mode = "on";
            };

            tog_off: toggle_layer_off_only {
                compatible = "zmk,behavior-toggle-layer";
                #binding-cells = <1>;
                display-name = "Toggle Layer Off";
                toggle-mode = "off";
            };
        };
    };

    combos {
        compatible = "zmk,combos";

        layer_lock {
            bindings = <&tog_on 1>;
            key-positions = <38 39>;
        };

        layer_lock_off {
            bindings = <&tog_off 1>;
            key-positions = <38 37>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&none  &kp Q           &kp W           &kp E         &kp R             &kp T        &kp Y        &kp U              &kp I                  &kp O                 &kp P               &none
&none  &hm LEFT_GUI A  &hm LEFT_ALT S  &hm LCTRL D   &hm LEFT_SHIFT F  &kp G        &kp H        &mt RIGHT_SHIFT J  &hm RCTRL K            &hm RIGHT_ALT L       &kp BACKSPACE       &none
&none  &kp Z           &kp X           &kp C         &kp V             &kp B        &kp N        &kp M              &mt DOUBLE_QUOTES SQT  &mt GREATER_THAN DOT  &mt QUESTION SLASH  &none
                                       &lt 2 ESCAPE  &lt 3 SPACE       &lt 1 TAB    &lt 2 ENTER  &lt 4 SPACE        &lt 5 BACKSPACE
            >;

            label = "Base";
        };

        Num {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &kp Q  &kp O  &kp E  &kp R  &kp T         &trans     &kp N7                   &kp N8               &kp N9                 &trans     &none
&none  &kp I  &kp S  &kp D  &kp F  &kp P         &trans     &hm LEFT_SHIFT NUMBER_4  &hm LEFT_CONTROL N5  &hm LEFT_ALT NUMBER_6  &kp EQUAL  &none
&none  &kp X  &kp C  &kp V  &kp J  &kp H         &kp GRAVE  &kp NUMBER_1             &kp NUMBER_2         &kp NUMBER_3           &to 1      &none
                     &kp M  &kp L  &kp DELETE    &kp RET    &kp N0                   &kp PERIOD
            >;

            label = "Num";
        };

        Sym {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&none  &mt TILDE GRAVE                 &mt AMPERSAND PIPE                      &mt ASTERISK SLASH          &mt GREATER_THAN LESS_THAN  &kp SLASH               &trans   &trans  &trans  &trans  &trans  &none
&none  &mt RIGHT_BRACKET LEFT_BRACKET  &mt RIGHT_PARENTHESIS LEFT_PARENTHESIS  &mt RIGHT_BRACE LEFT_BRACE  &mt COLON SEMICOLON         &kp PLUS                &trans   &trans  &trans  &trans  &trans  &none
&none  &trans                          &mt EXCLAMATION QUESTION                &mt HASH AT_SIGN            &kp COMMA                   &kp LCTRL               &trans   &trans  &trans  &trans  &trans  &none
                                                                               &trans                      &trans                      &hm UNDERSCORE MINUS    &kp RET  &trans  &trans
            >;

            label = "Sym";
        };

        Nav {
            bindings = <
&trans  &sl 1   &trans  &trans  &trans  &trans    &kp C_AL_CALCULATOR  &kp C_AC_PASTE  &kp C_AC_COPY     &kp C_AC_CUT  &kp C_AC_UNDO  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp CAPS             &kp LEFT        &kp DOWN          &kp UP_ARROW  &kp RIGHT      &trans
&trans  &trans  &trans  &trans  &trans  &trans    &kp INS              &kp HOME        &kp PAGE_DOWN     &kp PAGE_UP   &kp END        &trans
                        &trans  &trans  &trans    &trans               &trans          &kp LC(LEFT_GUI)
            >;

            label = "Nav";
        };

        Media {
            bindings = <
&trans  &trans        &trans        &trans        &trans              &trans        &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp C_REWIND  &kp C_VOL_UP  &kp C_VOL_DN  &kp C_FAST_FORWARD  &trans        &trans  &none   &none   &none   &none   &trans
&trans  &trans        &trans        &trans        &trans              &trans        &trans  &trans  &trans  &trans  &trans  &trans
                                    &kp C_MUTE    &kp C_PP            &kp C_STOP    &trans  &trans  &trans
            >;

            label = "Media";
        };

        Fun {
            bindings = <
&trans  &kp F12           &kp F7           &kp F8               &kp F9        &kp PRINTSCREEN    &trans  &bootloader   &trans        &trans        &trans        &trans
&trans  &hm LEFT_GUI F11  &hm LEFT_ALT F4  &hm LEFT_CONTROL F5  &hm LSHFT F6  &kp SCROLLLOCK     &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &kp F10           &kp F1           &kp F2               &kp F3        &kp PAUSE_BREAK    &trans  &trans        &trans        &trans        &trans        &bt BT_CLR
                                           &trans               &trans        &trans             &trans  &trans        &trans
            >;

            label = "Fun";
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
